##
#
# Travis CI script for keyvi
#


language: cpp

cache:
  directories:
    - $HOME/.pip-cache

matrix:
  include:
    - os: linux
      compiler: gcc
      env: CONF=debug   ARCH=x86_64   KEYVI_BUILD_AND_TEST_PR="true"
    - os: linux
      compiler: gcc
      env: CONF=release ARCH=x86_64   KEYVI_BUILD_AND_TEST_PR="true"
    - os: linux
      compiler: gcc
      env: CONF=coverage ARCH=x86_64   KEYVI_BUILD_AND_TEST_PR="true"
    - os: osx
      env: CONF=release   KEYVI_BUILD_AND_TEST_PR="true"
      compiler: clang

env:
  global:
    - GITHUB_REPO='cliqz-oss/keyvi'
    - secure: "cy3LYIeuSxIdDt4GArpStoawmlEXy7oVX/Z72hwcXVj6EgQ8za16GaayQCLbHy9Hlm0K42QmWg4s7iOm/QzKBlZAwvHMktmHIVoovXe+i83bRVclMr/zvzhEeSyCy4xbBEBT8qt4p0dwX4hOF6cfy+rpNsI+CMBbGgMSS/MZHm/FmF5fKqcZBJfZfEPOqOukID4NPirDlZ8Jmg8JR1K722+xXvwbSif0a6wJ3p517JjYJxO8a7AzdXJMXC3sJmpsSCBwp+NG9BrwJ/MgQFHKUEhPoPFOEI7P57rH9Cax8+y9j7ukwlB36Ae5ApddcXYbQMOtpoA+DvR5JbsbYWi4/T6qUntYmpRy5gPVD/IwIAldEt3iERswjWFHgUjN+JaJ6YqQHl5ks++NZbB6W8eqP2Id1Oa669b6uxFn62Ln43TcvY4bapJEscj7goReiQGjwIWjBxphP/eJaPae642HnpBijPjAG+uA8IyO2nuY/+xULMiNXDFGVmBC5VfYp95Y71ZlUpfUv6u96mXc3ruWmDRzGNNgNXmzIGfD5bxn2uxMykOW6ubG4mnxOT/qMia8yrYsPYdBsvc1u2XWHAUUrHPVr9HmFo68y3AfuXwXH2Eb0fGTxNmaihabcqoBdm6HRK3aRLqXweBI2xXyOY8Tf07hUy+G7qkg2ZrsEgwWg+k="  # COVERALLS_REPO_TOKEN

before_install:
  - pip install --user --download-cache $HOME/.pip-cache --use-wheel --install-option="--no-cython-compile" cython
  - pip install -v --user --download-cache $HOME/.pip-cache --use-wheel pytest
  - pip install --user --download-cache $HOME/.pip-cache --use-wheel msgpack-python
  - if [ "$CC" = "gcc" ] && [ "$CONF" = "coverage" ]; then pip install --user --download-cache $HOME/.pip-cache --use-wheel coveralls-merge; fi
  - if [ "$CC" = "gcc" ] && [ "$CONF" = "coverage" ]; then pip install --user --download-cache $HOME/.pip-cache --use-wheel cpp-coveralls; fi
  # OSX only for non PR builds
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ] || [ "$TRAVIS_PULL_REQUEST" == "false" ] ); then 
      brew update;
      brew install snappy scons;
      brew uninstall boost;
      wget 'https://github.com/hendrik-cliqz/travis-homebrew-bottle/releases/download/boost-1.61-cxx11/boost-1.61.0_1.mavericks.bottle.1.tar.gz';
      brew install boost-1.61.0_1.mavericks.bottle.1.tar.gz;
      export PATH=$PATH:$HOME/library/python/2.7/bin/;
      export KEYVI_BUILD_AND_TEST_PR="true";
    fi

install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
# disable, LLVM broken for now    - llvm-toolchain-precise-3.6
    - boost-latest
    packages:
    - gcc-4.8
    - g++-4.8
# disabled due to https://github.com/travis-ci/travis-ci/issues/6120    - clang
    - scons
    - valgrind
    - cmake
    - libboost-thread1.55-dev
    - libboost-system1.55-dev
    - libboost-test1.55-dev
    - libboost1.55-dev
    - libboost-date-time1.55-dev
    - libboost-regex1.55-dev
    - libboost-filesystem1.55-dev
    - libboost-program-options1.55-dev
    - libboost-iostreams1.55-dev
    - libsnappy-dev
    - zlib1g-dev
    - doxygen
    - libstdc++-4.8-dev

script:
  - cd keyvi;
  - if [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ]; then scons -j 4 mode=$CONF; fi
  - if [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ]; then travis_wait $CONF/dictionaryfsa_unittests/dictionaryfsa_unittests; fi
  - cd ../pykeyvi;
  - if [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ]; then python setup.py build --mode $CONF; fi
  - if [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ]; then python setup.py install --user; fi
  - if [ "$KEYVI_BUILD_AND_TEST_PR" == "true" ]; then py.test tests; fi
  - free
  - df
  - env
  
# workaround for coverage measurement: symlink cpp source:
  - if [[ "$CONF" = "coverage" ]]; then 
      cd src;
      ln -s ../../keyvi/src/cpp/ .;
    fi
  - cd ..
  - cd ..
    
sudo: false
after_success:
  - if [ "$CC" = "gcc-4.8" ] && [ "$CONF" = "coverage" ]; then coveralls -r keyvi -b keyvi --gcov /usr/bin/gcov-4.8 --gcov-options '\-lp' -e 3rdparty -E '.*/tests/*.cpp' --dump keyvi.cov_report > /dev/null && coveralls -r pykeyvi -b pykeyvi --gcov /usr/bin/gcov-4.8 --gcov-options '\-lp \-s '"$PWD"'/keyvi' -E '.*3rdparty' -E '.*/pykeyvi.cpp' -E '.*autowrap.*' --dump pykeyvi.cov_report --follow-symlinks > /dev/null && export COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN} && coveralls-merge  keyvi.cov_report pykeyvi.cov_report ; fi

